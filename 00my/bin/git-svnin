#!/bin/bash

##
# Git command to log incoming svn commits (commits not yet merged in from the
# svn server).
#
#  $ git svnin
##

# run git log in bunches of 25 until we find a svn id.
LIMIT=25
SVN_REVISION=""
LAST_REVISION="HEAD"
PAGER=`git config core.pager`
if [ -z "$PAGER" ] ; then
  PAGER="less"
fi

function _svnin(){
  while [ -z "$SVN_REVISION" -a -n "$LAST_REVISION" ] ; do
    LOG=`git log -$LIMIT $LAST_REVISION 2> /dev/null | awk --re-interval '
      BEGIN {
        FS = "\n"
        svn_id_found = 0
      }

      /commit [a-f0-9]{40}/ {
        print $1
      }

      /^[[:space:]]+git-svn-id:/ {
        if (svn_id_found == 0){
          svn_id_found = 1
          print $1
        }
      }
    '`
    if [ -n "$LOG" ] ; then
      LAST_REVISION=`echo $LOG | sed -r 's|.*commit ([a-f0-9]{40}).*|\1^|'`
      SVN_REVISION=`echo $LOG | sed -r 's|.*git-svn-id: .*@([0-9]+).*|\1|'`
      LOG=`echo $LOG | sed -r 's|\n| |g'`
      if [ "$SVN_REVISION" == "$LOG" ] ; then
        SVN_REVISION=""
      fi
    else
      LAST_REVISION=""
    fi
  done

  if [ -n "$SVN_REVISION" ] ; then
    # run git svn log in bunches of 25 and stop when we stop finding new
    # entries with revisions > the svn id we found above.
    LIMIT=25
    FIRST=$((SVN_REVISION + 1))
    LAST=$FIRST
    LAST_REVISION=$FIRST
    while [ -n "$LAST_REVISION" ] ; do
      MAX_REV=$(($LAST_REVISION + $LIMIT))
      LOG=`git svn log --limit=$(($LIMIT + 1)) --revision=$MAX_REV:$LAST_REVISION`
      NEXT_REV=`echo $LOG | sed -r 's|-+\sr([0-9]+).*|\1|'`
      if [[ "$NEXT_REV" =~ ^[0-9]$ && "$NEXT_REV" != "$LAST_REVISION" ]] ; then
        LAST_REVISION=$NEXT_REV
        LAST=$NEXT_REV
      else
        LAST_REVISION=""
      fi
    done
    git svn log $* --revision=$LAST:$FIRST | cat -
  fi
}
_svnin | $PAGER
