#if [ -f ~/.ssh/my_vars ]; then
#  source ~/.ssh/my_vars
#else
#  echo "no ~/.ssh/my_vars"
#  echo set my name as "noname"
#  export MY_NAME=noname
#  export MY_EMAIL=noname@gmail.com
#fi
#GIT_AUTHOR_NAME=$MY_NAME
#GIT_COMMITTER_NAME="$MY_NAME"
#git config --global user.name "$MY_NAME"
#GIT_AUTHOR_EMAIL=$MY_EMAIL
#GIT_COMMITTER_EMAIL="$MY_EMAIL"
#git config --global user.email "$MY_EMAIL"


try_path_prepend() {
  tmp_path=$1
  [ -d ${tmp_path}  ] && export PATH=${tmp_path}:$PATH
}
try_path_append() {
  tmp_path=$1
  [ -d ${tmp_path}  ] && export PATH=$PATH:${tmp_path}
}
try_DYLD_LIBRARY_PATH_prepend() {
  tmp_path=$1
  [ -d ${tmp_path}  ] && export DYLD_LIBRARY_PATH=${tmp_path}:$DYLD_LIBRARY_PATH
}
try_DYLD_LIBRARY_PATH_append() {
  tmp_path=$1
  [ -d ${tmp_path}  ] && export DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH:${tmp_path}
}
try_source() {
  tmp_src=$1
  [ -f "${tmp_src}" ] && . "${tmp_src}"
}
try_subdir_path_append() {
  maindir=$1
  if [ "x${maindir}" == "x" ] ; then return ; fi
  if [ ! -d ${maindir} ]; then return ; fi
  for subdir in `find ${maindir} -maxdepth 1 -mindepth 1 -type d -print`
  do
    if [ -d $subdir/bin ]; then
      try_path_append $subdir/bin
    else
      try_path_append $subdir
    fi
  done
}

 



try_path_append ~/Library/Android/sdk/platform-tools
try_path_prepend ~/.node/bin

try_subdir_path_append ~/Documents/0dtools
try_path_prepend ~/.rvm/bin
[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm" # Load RVM into a shell session *as a function*

test -e "${HOME}/.iterm2_shell_integration.bash" && source "${HOME}/.iterm2_shell_integration.bash"
export NVM_DIR=~/.nvm
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm




## for macbook 13
if [ -d /Volumes/MacintoshHD ] ; then  
try_path_prepend /Volumes/MacintoshHD/works/otp_outOTP-19.2.3/bin
try_path_prepend /Volumes/MacintoshHD/erl16/bin
try_DYLD_LIBRARY_PATH_prepend /Volumes/MacintoshHD/apps/benvium-libimobiledevice-macosx-8507dd2
alias ws='cd /Volumes/MacintoshHD'
alias xcodeu7='sudo xcode-select -s /Volumes/MacintoshHD/apps/Xcode7.2.app/Contents/Developer'
alias xcodeu='sudo xcode-select -s /Volumes/MacintoshHD/apps/Xcode.app/Contents/Developer'
fi


launchctl_prepare() {
  chmod 700 ~/dotfiles/ ~/dotfiles/LaunchAgents/ ~/dotfiles/LaunchAgents/*
}

launchctl_redis () {
  launchctl_prepare
  launchctl unload ~/library/LaunchAgents/com.lrobot.redis.plist
  launchctl load ~/library/LaunchAgents/com.lrobot.redis.plist
  sleep 0.5
  launchctl stop com.lrobot.redis
  sleep 0.5
  launchctl start com.lrobot.redis
  sleep 0.5
  launchctl list | grep redis
}
launchctl_mongo () {
  launchctl_prepare
  launchctl unload ~/library/LaunchAgents/com.lrobot.mongodbstart.plist
  launchctl load ~/library/LaunchAgents/com.lrobot.mongodbstart.plist
  sleep 0.5
  launchctl stop com.lrobot.mongodbstart
  sleep 0.5
  launchctl start com.lrobot.mongodbstart
  sleep 0.5
  launchctl list | grep mongodbstart
}

gitlab_runner(){
  launchctl_prepare
  launchctl unload ~/library/LaunchAgents/com.lrobot.mongodbstart.plist
  launchctl load ~/library/LaunchAgents/com.lrobot.mongodbstart.plist
  /usr/local/bin/gitlab-runner uninstall
  /usr/local/bin/gitlab-runner install
  /usr/local/bin/gitlab-runner stop
  /usr/local/bin/gitlab-runner start
  sleep 1.5
  /usr/local/bin/gitlab-runner status

}



#export PYTHONSTARTUP=~/.pythonrc
export PATH=$PATH:~/depot_tools

alias jcerun='cd /Users/hello/Documents/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0'

alias sshsyncfg='curl http://192.168.99.1/dot_ssh_config.txt -o ~/.ssh/config'
alias sshp='eval `ssh-agent` && ssh-add ~/.ssh/id_rsa'
alias ssh='ssh -A -o ServerAliveInterval=5'
alias socksbyssh='ssh -A -o ServerAliveInterval=5 -D 127.0.0.1:1080'
#https://gist.github.com/yougg/5d2b3353fc5e197a0917aae0b3287d64 set http or socks proxy
alias socksenble_http='export HTTP_PROXY=socks5://127.0.0.1:1080'
alias socksenble_https='export HTTP_PROXY=socks5://127.0.0.1:1080'
alias socksenble_all='export ALL_PROXY=socks5://127.0.0.1:1080'
alias socksdisable_all='export ALL_PROXY='
alias socksenble_alls='export {HTTP,HTTPS,FTP,RSYNC,ALL}_PROXY=socks5://127.0.0.1:1080'
alias socksdisable_alls='export {HTTP,HTTPS,FTP,RSYNC,ALL}_PROXY='
alias ctagsdo='ctags --recurse=yes'
alias cscopedo='cscope -bqR'
alias tagsdo='ctagsdo; cscopedo; gtags'
alias fabdo='fab --set=use_ssh_config=1 -f ~/dotfiles/fabfile.py'
alias fabdoyz='fabdo -H yz-stage,yz-db,yz-web,yz-web2,yz-comm,yz-comm2'

#alias jmeterserver_centos=echo 'yum install -y java-1.8.0-openjdk && mkdir -p /data/jmeter && cd /data/jmeter JMETER=apache-jmeter-3.1 && ( [ -d ${JMETER} ] || ( [ -f ${JMETER} ]||wget http://apache.claz.org/jmeter/binaries/${JMETER}.tgz ) && tar xzvf ${JMETER}.tgz ) && pkill -f "java.*JMeter" && nohup ./bin/jmeter-server &'
alias idevicesyslogqq='idevicesyslog -u 7ca4d2933dc8b5d643f823e8fa3d4fb8a9ea676c'
alias grepnoios='grep -v  " dataaccessd\| kernel\| CommCenter\| locationd\| itunesstored\| coreduetd\| symptomsd\| SpringBoard\| apsd\| mDNSResponder\| parsecd\| backboardd\| MobileSMS\| assistant_service\| calaccessd\| assistantd\| syncdefaultsd\| awdd\| mediaserverd\| gamed\| searchd\| accountsd\|iPhone tccd\|iPhone swcd\| QCall\| pasted"'
alias composer="php /usr/local/bin/composer.phar"

alias allm4a2mp3='for item in `ls *.m4a` ; do echo ffmpeg -i ${item} -c:v copy -c:a libmp3lame -q:a 4 ${item%.m4a}.mp3 ; done'
alias vi='vim -u NONE'


runssh(){ remote=$1 file=$2; tar czf - $file | ssh ${remote} 'D=`mktemp -d`; tar xzf - -C $D; $D/'${file} ; }

if which defaults ; then
alias sshfshome='mkdir -p ~/Documents/mnt/home_srvs ; umount ~/Documents/mnt/home_srvs ; sshfs home:/srvs  ~/Documents/mnt/home_srvs'
alias sshfstoshiba='mkdir -p ~/Documents/mnt/home_toshiba ; umount ~/Documents/mnt/home_toshiba ; sshfs home:/mnt/toshiba  ~/Documents/mnt/home_toshiba'
fi


export LDFLAGS=""
export CFLAGS=""
export CPPFLAGS=$CFLAGS
export HISTCONTROL=ignorespace
#git daemon --export-all --enable=receive-pack --enable=upload-archive --detach --base-path=${DISK_ROOT}/repos/



